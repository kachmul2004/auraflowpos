import { Plugin } from '../../core/lib/types/plugin.types';
import { Percent } from 'lucide-react';

export const discountManagementPlugin: Plugin = {
  id: 'discount-management',
  name: 'Advanced Discount Management',
  description: 'Square-style discount system with quick buttons, custom amounts, discount reasons, permissions, and comprehensive tracking',
  version: '1.0.0',
  category: 'sales',
  icon: Percent,
  author: 'AuraFlow',
  enabled: true,
  config: {
    quickDiscounts: {
      enabled: true,
      presetPercentages: [5, 10, 15, 20, 25, 50],
      presetAmounts: [1, 5, 10, 20, 50],
      allowCustom: true,
      defaultType: 'percentage', // 'percentage' | 'amount'
    },
    discountTypes: {
      itemLevel: {
        enabled: true,
        requireReason: false,
        maxPercentage: 100,
        maxAmount: null, // null = unlimited
      },
      cartLevel: {
        enabled: true,
        requireReason: true,
        maxPercentage: 50,
        maxAmount: null,
      },
      categoryLevel: {
        enabled: false, // Future feature
        requireReason: true,
      },
    },
    discountReasons: {
      required: true,
      predefined: [
        'Employee Discount',
        'Manager Discretion',
        'Customer Loyalty',
        'Damaged Item',
        'Price Match',
        'Promotional',
        'Clearance',
        'Bulk Discount',
        'VIP Customer',
        'Complaint Resolution',
        'Senior Discount',
        'Student Discount',
        'Military Discount',
        'Birthday Special',
        'First Time Customer',
        'Return Customer',
        'Wholesale',
        'Other',
      ],
      allowCustom: true,
      trackInReports: true,
    },
    permissions: {
      requireApproval: {
        enabled: false,
        thresholdPercentage: 25, // Require manager approval for >25%
        thresholdAmount: 100, // Require manager approval for >$100
        approverRoles: ['manager', 'admin'],
      },
      roleBasedLimits: {
        cashier: {
          maxPercentage: 10,
          maxAmount: 20,
          requireReason: true,
        },
        manager: {
          maxPercentage: 50,
          maxAmount: 500,
          requireReason: true,
        },
        admin: {
          maxPercentage: 100,
          maxAmount: null, // unlimited
          requireReason: false,
        },
      },
      restrictedCategories: [], // Categories that can't be discounted
    },
    display: {
      showOnReceipt: true,
      showDiscountReason: true,
      showOriginalPrice: true,
      highlightSavings: true,
    },
    reporting: {
      trackDiscountUsage: true,
      trackByEmployee: true,
      trackByReason: true,
      trackByCategory: true,
      trackByTimeOfDay: true,
      alertThreshold: 1000, // Alert if total discounts exceed $1000/day
    },
    ui: {
      quickButtonLayout: 'grid', // 'grid' | 'row'
      showSavingsCalculator: true,
      confirmBeforeApply: false,
      allowRemoveDiscount: true,
      showDiscountInCart: true,
    },
    validation: {
      preventNegativePrice: true,
      minimumPrice: 0.01,
      roundToNearestCent: true,
      allowZeroPrice: false, // Prevent 100% discount
    },
    integration: {
      syncWithInventory: false, // Future: Update cost tracking
      syncWithLoyalty: true, // Consider loyalty points
      syncWithPromotion: false, // Future: Automated promotions
    },
  },
  requiredPermissions: ['apply_discount'],
  dependencies: [],
  optionalDependencies: ['loyalty-program', 'employee-performance'],
  industries: ['restaurant', 'retail', 'cafe', 'pharmacy', 'salon', 'general', 'ultimate'],
  packageTier: 'basic', // Core POS feature
  features: [
    'Quick discount buttons (%, $)',
    '6 preset percentage options',
    '5 preset amount options',
    'Custom discount entry',
    'Item-level discounts',
    'Cart-level discounts',
    '18 predefined discount reasons',
    'Custom discount reasons',
    'Role-based permissions',
    'Maximum discount limits',
    'Manager approval workflow',
    'Discount tracking by employee',
    'Discount tracking by reason',
    'Discount tracking by time',
    'Show savings on receipt',
    'Show original price',
    'Remove/void discount',
    'Discount reports',
    'Real-time discount alerts',
    'Prevent negative pricing',
    'Category restrictions',
    'Bulk discount support',
    'VIP customer discounts',
    'Senior/student/military discounts',
    'Clearance pricing',
    'Price matching',
    'Promotional discounts',
    'Loyalty integration',
    'Employee discount tracking',
    'Complaint resolution tracking',
  ],
  settings: [
    {
      key: 'quickDiscounts.enabled',
      label: 'Enable Quick Discount Buttons',
      type: 'boolean',
      defaultValue: true,
      description: 'Show quick discount buttons in POS',
    },
    {
      key: 'quickDiscounts.presetPercentages',
      label: 'Preset Percentage Discounts',
      type: 'text',
      defaultValue: '5,10,15,20,25,50',
      description: 'Comma-separated percentage values (e.g., 5,10,20)',
    },
    {
      key: 'discountReasons.required',
      label: 'Require Discount Reason',
      type: 'boolean',
      defaultValue: true,
      description: 'Force users to select a reason for discounts',
    },
    {
      key: 'permissions.requireApproval.enabled',
      label: 'Require Manager Approval',
      type: 'boolean',
      defaultValue: false,
      description: 'Require manager approval for large discounts',
    },
    {
      key: 'permissions.requireApproval.thresholdPercentage',
      label: 'Approval Threshold (%)',
      type: 'number',
      defaultValue: 25,
      description: 'Require approval for discounts above this percentage',
    },
    {
      key: 'permissions.roleBasedLimits.cashier.maxPercentage',
      label: 'Cashier Max Discount (%)',
      type: 'number',
      defaultValue: 10,
      description: 'Maximum discount percentage for cashiers',
    },
    {
      key: 'permissions.roleBasedLimits.manager.maxPercentage',
      label: 'Manager Max Discount (%)',
      type: 'number',
      defaultValue: 50,
      description: 'Maximum discount percentage for managers',
    },
    {
      key: 'display.showOnReceipt',
      label: 'Show Discount on Receipt',
      type: 'boolean',
      defaultValue: true,
      description: 'Display discount information on receipts',
    },
    {
      key: 'reporting.alertThreshold',
      label: 'Daily Discount Alert Threshold ($)',
      type: 'number',
      defaultValue: 1000,
      description: 'Alert when daily discounts exceed this amount',
    },
    {
      key: 'validation.allowZeroPrice',
      label: 'Allow 100% Discounts',
      type: 'boolean',
      defaultValue: false,
      description: 'Allow items to be discounted to $0.00',
    },
  ],
  businessBenefits: [
    'Empower staff with flexible pricing',
    'Match competitor prices instantly',
    'Resolve customer complaints quickly',
    'Track discount effectiveness',
    'Prevent discount abuse with limits',
    'Maintain profit margins with controls',
    'Reward loyal customers easily',
    'Support promotional campaigns',
    'Clear audit trail for discounts',
    'Employee accountability tracking',
    'Identify high-discount periods',
    'Optimize pricing strategy',
    'Reduce manager intervention time',
    'Improve customer satisfaction',
    'Increase transaction speed',
  ],
  useCases: [
    'Employee purchases (staff discount)',
    'Price matching competitor offers',
    'Damaged or defective items',
    'Customer complaint resolution',
    'Loyalty reward redemption',
    'Senior/student/military discounts',
    'Clearance and closeout sales',
    'Bulk purchase discounts',
    'VIP customer recognition',
    'Birthday or special occasion',
    'First-time customer incentive',
    'Promotional campaigns',
    'Manager discretion adjustments',
    'End of day clearance',
    'Seasonal discounting',
  ],
  metrics: {
    totalDiscountsApplied: 'Total number of discounts',
    totalDiscountAmount: 'Total $ amount discounted',
    averageDiscountPercentage: 'Average discount %',
    discountsByReason: 'Breakdown by reason',
    discountsByEmployee: 'Breakdown by employee',
    discountsByCategory: 'Breakdown by product category',
    discountsByTimeOfDay: 'Breakdown by hour',
    largestDiscount: 'Largest single discount',
    mostDiscountedItem: 'Most frequently discounted item',
    discountImpactOnRevenue: 'Revenue impact %',
  },
  dataSchema: {
    discount: {
      id: 'string',
      type: 'item | cart',
      method: 'percentage | amount',
      value: 'number',
      reason: 'string',
      customReason: 'string | null',
      appliedBy: 'string', // employee ID
      approvedBy: 'string | null', // manager ID
      appliedAt: 'Date',
      itemId: 'string | null',
      transactionId: 'string',
      originalPrice: 'number',
      discountedPrice: 'number',
      savingsAmount: 'number',
    },
    discountApproval: {
      id: 'string',
      discountId: 'string',
      requestedBy: 'string',
      approvedBy: 'string',
      status: 'pending | approved | rejected',
      requestedAt: 'Date',
      respondedAt: 'Date | null',
      notes: 'string',
    },
  },
};
